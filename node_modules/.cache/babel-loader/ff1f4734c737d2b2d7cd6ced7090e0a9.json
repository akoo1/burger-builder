{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alfred/Desktop/React - The Complete Guide/burger-builder/src/components/Burger/BuildControlsList/BuildControlsList.js\";\nimport React from 'react';\nimport BuildControl from './BuildControl/BuildControl';\nimport './BuildControlsList.css';\nconst controls = [{\n  label: 'Meat',\n  type: 'meat'\n}, {\n  label: 'Cheese',\n  type: 'cheese'\n}, {\n  label: 'Salad',\n  type: 'salad'\n}, {\n  label: 'Bacon',\n  type: 'bacon'\n}];\n\nconst BuildControlsList = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"build-controls\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"current-price\",\n      children: [\"Current Price: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"$\", props.price.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), controls.map(control => /*#__PURE__*/_jsxDEV(BuildControl, {\n      label: control.label,\n      addIngredientHandler: () => props.addIngredientHandler(control.type),\n      removeIngredientHandler: () => props.removeIngredientHandler(control.type),\n      disabledInfo: props.disabledInfo[control.type]\n    }, control.label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"order-btn\",\n      disabled: !props.isPurchaseable,\n      children: \"ORDER NOW\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BuildControlsList;\nexport default BuildControlsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BuildControlsList\");","map":{"version":3,"sources":["/Users/alfred/Desktop/React - The Complete Guide/burger-builder/src/components/Burger/BuildControlsList/BuildControlsList.js"],"names":["React","BuildControl","controls","label","type","BuildControlsList","props","price","toFixed","map","control","addIngredientHandler","removeIngredientHandler","disabledInfo","isPurchaseable"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAO,yBAAP;AAEA,MAAMC,QAAQ,GAAG,CACf;AAAEC,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,IAAI,EAAE;AAAvB,CADe,EAEf;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,IAAI,EAAE;AAAzB,CAFe,EAGf;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CAHe,EAIf;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CAJe,CAAjB;;AAOA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAEnC,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA,iDAA4C;AAAA,wBAAUA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoB,CAApB,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAGIN,QAAQ,CAACO,GAAT,CAAaC,OAAO,iBAClB,QAAC,YAAD;AAEE,MAAA,KAAK,EAAEA,OAAO,CAACP,KAFjB;AAGE,MAAA,oBAAoB,EAAE,MAAMG,KAAK,CAACK,oBAAN,CAA2BD,OAAO,CAACN,IAAnC,CAH9B;AAIE,MAAA,uBAAuB,EAAE,MAAME,KAAK,CAACM,uBAAN,CAA8BF,OAAO,CAACN,IAAtC,CAJjC;AAKE,MAAA,YAAY,EAAEE,KAAK,CAACO,YAAN,CAAmBH,OAAO,CAACN,IAA3B;AALhB,OACOM,OAAO,CAACP,KADf;AAAA;AAAA;AAAA;AAAA,YADF,CAHJ,eAaE;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,QAAQ,EAAE,CAACG,KAAK,CAACQ,cAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAzBD;;KAAMT,iB;AA4BN,eAAeA,iBAAf","sourcesContent":["import React from 'react'\nimport BuildControl from './BuildControl/BuildControl'\nimport './BuildControlsList.css'\n\nconst controls = [\n  { label: 'Meat', type: 'meat' },\n  { label: 'Cheese', type: 'cheese' },\n  { label: 'Salad', type: 'salad' },\n  { label: 'Bacon', type: 'bacon' }\n]\n\nconst BuildControlsList = (props) => {\n\n  return (\n    <div className='build-controls'>\n      <p className='current-price'>Current Price: <strong>${props.price.toFixed(2)}</strong></p>\n      {\n        controls.map(control =>\n          <BuildControl\n            key={control.label}\n            label={control.label}\n            addIngredientHandler={() => props.addIngredientHandler(control.type)}\n            removeIngredientHandler={() => props.removeIngredientHandler(control.type)}\n            disabledInfo={props.disabledInfo[control.type]}\n          />\n        )\n      }\n      <button\n        className='order-btn'\n        disabled={!props.isPurchaseable}\n      >\n        ORDER NOW\n         </button>\n    </div>\n  )\n\n}\n\n\nexport default BuildControlsList"]},"metadata":{},"sourceType":"module"}