{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alfred/Desktop/React - The Complete Guide/burger-builder/src/container/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Burger from '../../components/Burger/Burger';\nconst INGREDIENT_PRICES = {\n  meat: 1.5,\n  cheese: 0.5\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        meat: 0,\n        cheese: 0,\n        bacon: 0,\n        salad: 0\n      },\n      totalPrice: 4\n    };\n\n    this.addIngredientHandler = type => {\n      const newCount = this.state.ingredients[type] + 1; // This creates a deep copy of the object \n      // (for arrays and objects, state should be updated in an immutable way, cuz they are reference types)\n\n      let ingredients = { ...this.state.ingredients\n      };\n      ingredients[type] = newCount;\n      this.setState({\n        ingredients\n      });\n    };\n\n    this.removeIngredientHandler = type => {};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Burger, {\n          ingredients: this.state.ingredients\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(BuildControls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/Users/alfred/Desktop/React - The Complete Guide/burger-builder/src/container/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","BuildControls","Burger","INGREDIENT_PRICES","meat","cheese","BurgerBuilder","state","ingredients","bacon","salad","totalPrice","addIngredientHandler","type","newCount","setState","removeIngredientHandler","render"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,qDAA1B;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AAEA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,IAAI,EAAE,GADkB;AAExBC,EAAAA,MAAM,EAAE;AAFgB,CAA1B;;AAMA,MAAMC,aAAN,SAA4BN,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAEpCO,KAFoC,GAE5B;AACNC,MAAAA,WAAW,EAAE;AACXJ,QAAAA,IAAI,EAAE,CADK;AAEXC,QAAAA,MAAM,EAAE,CAFG;AAGXI,QAAAA,KAAK,EAAE,CAHI;AAIXC,QAAAA,KAAK,EAAE;AAJI,OADP;AAONC,MAAAA,UAAU,EAAE;AAPN,KAF4B;;AAAA,SAYpCC,oBAZoC,GAYZC,IAAD,IAAU;AAC/B,YAAMC,QAAQ,GAAG,KAAKP,KAAL,CAAWC,WAAX,CAAuBK,IAAvB,IAA+B,CAAhD,CAD+B,CAE/B;AACA;;AACA,UAAIL,WAAW,GAAG,EAAC,GAAG,KAAKD,KAAL,CAAWC;AAAf,OAAlB;AACAA,MAAAA,WAAW,CAACK,IAAD,CAAX,GAAoBC,QAApB;AACA,WAAKC,QAAL,CAAc;AAAEP,QAAAA;AAAF,OAAd;AACD,KAnBmC;;AAAA,SAqBpCQ,uBArBoC,GAqBTH,IAAD,IAAU,CAEnC,CAvBmC;AAAA;;AA0BpCI,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAA,8BACE;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,WAAW,EAAE,KAAKV,KAAL,CAAWC;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,+BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,oBADF;AAUD;;AAtCmC;;AA4CtC,eAAeF,aAAf","sourcesContent":["import React, { Component } from 'react'\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\nimport Burger from '../../components/Burger/Burger'\n\nconst INGREDIENT_PRICES = {\n  meat: 1.5,\n  cheese: 0.5,\n  \n}\n\nclass BurgerBuilder extends Component {\n\n  state = {\n    ingredients: {\n      meat: 0,\n      cheese: 0,\n      bacon: 0,\n      salad: 0\n    }, \n    totalPrice: 4\n  }\n\n  addIngredientHandler = (type) => {\n    const newCount = this.state.ingredients[type] + 1\n    // This creates a deep copy of the object \n    // (for arrays and objects, state should be updated in an immutable way, cuz they are reference types)\n    let ingredients = {...this.state.ingredients}  \n    ingredients[type] = newCount\n    this.setState({ ingredients })\n  }\n\n  removeIngredientHandler = (type) => {\n\n  }\n\n\n  render() {\n\n    return (\n      <>\n        <div>\n          <Burger ingredients={this.state.ingredients} />\n        </div>\n        <div>\n          <BuildControls />\n        </div>\n      </>\n    )\n  }\n}\n\n\n\n\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}