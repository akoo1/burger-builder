{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alfred/Desktop/React - The Complete Guide/burger-builder/src/components/Burger/BuildControls/BuildControls.js\";\nimport React from 'react';\nimport BuildControl from './BuildControl/BuildControl';\nimport './BuildControls.css';\nconst controls = [{\n  label: 'Meat',\n  type: 'meat'\n}, {\n  label: 'Cheese',\n  type: 'cheese'\n}, {\n  label: 'Salad',\n  type: 'salad'\n}, {\n  label: 'Bacon',\n  type: 'bacon'\n}];\n\nconst BuildControls = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"build-controls\",\n    children: controls.map(control => /*#__PURE__*/_jsxDEV(BuildControl, {\n      label: control.label,\n      addIngredientHandler: () => props.addIngredientHandler(control.type),\n      removeIngredientHandler: () => props.removeIngredientHandler(control.type),\n      disabledInfo: props.disabledInfo[control[type]]\n    }, control.label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BuildControls;\nexport default BuildControls;\n\nvar _c;\n\n$RefreshReg$(_c, \"BuildControls\");","map":{"version":3,"sources":["/Users/alfred/Desktop/React - The Complete Guide/burger-builder/src/components/Burger/BuildControls/BuildControls.js"],"names":["React","BuildControl","controls","label","type","BuildControls","props","map","control","addIngredientHandler","removeIngredientHandler","disabledInfo"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAO,qBAAP;AAEA,MAAMC,QAAQ,GAAG,CACf;AAAEC,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,IAAI,EAAE;AAAvB,CADe,EAEf;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,IAAI,EAAE;AAAzB,CAFe,EAGf;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CAHe,EAIf;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CAJe,CAAjB;;AAOA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAE/B,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,cACGJ,QAAQ,CAACK,GAAT,CAAaC,OAAO,iBACnB,QAAC,YAAD;AAEE,MAAA,KAAK,EAAEA,OAAO,CAACL,KAFjB;AAGE,MAAA,oBAAoB,EAAE,MAAMG,KAAK,CAACG,oBAAN,CAA2BD,OAAO,CAACJ,IAAnC,CAH9B;AAIE,MAAA,uBAAuB,EAAE,MAAME,KAAK,CAACI,uBAAN,CAA8BF,OAAO,CAACJ,IAAtC,CAJjC;AAKE,MAAA,YAAY,EAAEE,KAAK,CAACK,YAAN,CAAmBH,OAAO,CAACJ,IAAD,CAA1B;AALhB,OACOI,OAAO,CAACL,KADf;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAhBD;;KAAME,a;AAmBN,eAAeA,aAAf","sourcesContent":["import React from 'react'\nimport BuildControl from './BuildControl/BuildControl'\nimport './BuildControls.css'\n\nconst controls = [\n  { label: 'Meat', type: 'meat' },\n  { label: 'Cheese', type: 'cheese' },\n  { label: 'Salad', type: 'salad' },\n  { label: 'Bacon', type: 'bacon' }\n]\n\nconst BuildControls = (props) => {\n\n  return (\n    <div className='build-controls'>\n      {controls.map(control =>\n        <BuildControl\n          key={control.label}\n          label={control.label}\n          addIngredientHandler={() => props.addIngredientHandler(control.type)}\n          removeIngredientHandler={() => props.removeIngredientHandler(control.type)}\n          disabledInfo={props.disabledInfo[control[type]]}\n        />\n      )}\n    </div>\n  )\n\n}\n\n\nexport default BuildControls"]},"metadata":{},"sourceType":"module"}